<?xml version="1.0"?>
<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.test.processes</groupId>
  <artifactId>kogito-bpmn-pgsql-ha-bpmn-workflow</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <properties>
    <compiler-plugin.version>3.10.1</compiler-plugin.version>
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <surefire-plugin.version>3.0.0-M7</surefire-plugin.version>
    <maven.enforcer.plugin.version>3.5.0</maven.enforcer.plugin.version>
    <quarkus-plugin.version>3.8.6</quarkus-plugin.version>
    <quarkus.platform.artifact-id>quarkus-bom</quarkus.platform.artifact-id>
    <quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
    <quarkus.platform.version>3.8.6</quarkus.platform.version>
    <kogito.bom.group-id>org.kie.kogito</kogito.bom.group-id>
    <kogito.bom.artifact-id>kogito-bom</kogito.bom.artifact-id>
    <kogito.bom.version>999-20240912-SNAPSHOT</kogito.bom.version>
    <kogito-apps.bom.artifact-id>kogito-apps-bom</kogito-apps.bom.artifact-id>
    <version.org.kie.kogito>999-20240912-SNAPSHOT</version.org.kie.kogito>
  </properties>

  <repositories>
    <!-- useful to resolve parent pom when it is a SNAPSHOT -->
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <id>apache.snapshots</id>
      <name>Apache Snapshot Repository</name>
      <url>https://repository.apache.org/snapshots</url>
    </repository>
<!--    <repository>-->
<!--      <releases>-->
<!--        <enabled>true</enabled>-->
<!--      </releases>-->
<!--      <id>jfrog</id>-->
<!--      <name>Jfrog IBM</name>-->
<!--      <url>https://na.artifactory.swg-devops.com/artifactory/hyc-bamoe-team-generic-local/</url>-->
<!--    </repository>-->

  </repositories>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>${quarkus.platform.artifact-id}</artifactId>
        <version>${quarkus.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${kogito.bom.group-id}</groupId>
        <artifactId>${kogito.bom.artifact-id}</artifactId>
        <version>${kogito.bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>${kogito.bom.group-id}</groupId>
        <artifactId>${kogito-apps.bom.artifact-id}</artifactId>
        <version>${version.org.kie.kogito}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- jBPM  -->
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-quarkus</artifactId>
    </dependency>

    <!-- Addons to include management endpoints in the Kogito app -->
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-addons-quarkus-process-management</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-addons-quarkus-process-svg</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-addons-quarkus-source-files</artifactId>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>io.quarkiverse.loggingmanager</groupId>
      <artifactId>quarkus-logging-manager</artifactId>
      <version>3.1.2</version>
    </dependency>

    <!-- RESTEasy Classic -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy</artifactId>
    </dependency>

    <!-- Others -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-arc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-openapi</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <quarkus.profile>dev</quarkus.profile>
        <quarkus.embedded.postgresql.version>0.2.3</quarkus.embedded.postgresql.version>
        <quarkus.wiremock.version>1.3.3</quarkus.wiremock.version>
      </properties>
      <dependencies>
        <dependency>
          <groupId>org.jbpm</groupId>
          <artifactId>jbpm-quarkus-devui</artifactId>
          <version>${bamoe.version}</version>
        </dependency>
        <dependency>
          <groupId>io.quarkiverse.embedded.postgresql</groupId>
          <artifactId>quarkus-embedded-postgresql</artifactId>
          <version>${quarkus.embedded.postgresql.version}</version>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>bamoe-persistence</id>
      <properties>
        <quarkus.profile>bamoe-persistence</quarkus.profile>
      </properties>
      <dependencies>
        <!-- Persistence -->
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>kie-addons-quarkus-persistence-jdbc</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-jdbc-postgresql</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-agroal</artifactId>
        </dependency>

        <!-- Data Index Addon -->
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>kogito-addons-quarkus-data-index-postgresql</artifactId>
        </dependency>
        <!-- Data Audit -->
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>kogito-addons-quarkus-data-audit-jpa</artifactId>
        </dependency>
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>kogito-addons-quarkus-data-audit</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>bamoe-jobs</id>
      <properties>
        <quarkus.profile>bamoe-jobs</quarkus.profile>
      </properties>
      <dependencies>
        <!-- Jobs Service -->
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>kogito-addons-quarkus-jobs</artifactId>
        </dependency>
        <!-- Jobs service persistence -->
        <dependency>
          <groupId>org.kie.kogito</groupId>
          <artifactId>jobs-service-postgresql-common</artifactId>
        </dependency>
        <!-- Jobs Management endpoints -->
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>kogito-addons-quarkus-jobs-management</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <!-- containe profile -->
    <profile>
      <id>container</id>
      <properties>
        <quarkus.profile>container</quarkus.profile>
      </properties>
      <dependencies>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-container-image-jib</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>opentelemetry-traces-logs-metrics</id>
      <properties>
        <quarkus.profile>opentelemetry-traces-logs-metrics</quarkus.profile>
      </properties>
      <dependencies>
        <!-- ELK Logging -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-logging-gelf</artifactId>
        </dependency>

        <!-- Observability -->
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-micrometer</artifactId>
        </dependency>
        <dependency>
          <groupId>io.quarkiverse.micrometer.registry</groupId>
          <artifactId>quarkus-micrometer-registry-otlp</artifactId>
          <version>${micrometer.version}</version>
        </dependency>
        <dependency>
          <groupId>io.quarkus</groupId>
          <artifactId>quarkus-opentelemetry</artifactId>
        </dependency>
        <dependency>
          <groupId>io.opentelemetry.instrumentation</groupId>
          <artifactId>opentelemetry-jdbc</artifactId>
        </dependency>
      </dependencies>
    </profile>
  </profiles>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>${quarkus.platform.group-id}</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${quarkus.platform.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <arg>-parameters</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${surefire-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                <maven.home>${maven.home}</maven.home>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>